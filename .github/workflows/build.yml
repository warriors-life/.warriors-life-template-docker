# TODO: move all of this into separate actions (warriors-life/test-code-action, warriors-life/test-image-action, warriors-life/build-image-action, warriors-life/push-image-action)
# TODO: cache actions/checkout's output

name: Build, test, and push Docker image

on:
  push:
    branches:
      - 'release'
      - 'dev'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'dev'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions: {}

jobs:
  hadolint:
    if: "!contains(github.repository, 'repository-template')"
    name: Lint Dockerfile with Hadolint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@0a5820a2ec510d2521c1715d24860fc8cd06400a
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
      - name: Checkout # TODO: too heavy for checking out only one file
        uses: actions/checkout@bf085276cecdb0cc76fbbe0687a5a0e786646936
        with:
          persist-credentials: false
      - name: Lint
        uses: hadolint/hadolint-action@4b5806eb9c6bee4954fc0e0cc3ad6175fc9782c1
        with:
          dockerfile: src/Dockerfile
          failure-threshold: style

  metadata:
    needs: hadolint
    name: Get Docker image metadata
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@0a5820a2ec510d2521c1715d24860fc8cd06400a
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=sha,enable={{is_default_branch}}

  build:
    needs: metadata
    name: Build Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@0a5820a2ec510d2521c1715d24860fc8cd06400a
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            auth.docker.io:443
            dl-cdn.alpinelinux.org:443
            github.com:443
            production.cloudflare.docker.com:443
            registry-1.docker.io:443
            docker.io:443
      - name: Checkout
        uses: actions/checkout@bf085276cecdb0cc76fbbe0687a5a0e786646936
        with:
          persist-credentials: false
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@39a1a82492fd1ad19af19d61b5f748e4cb6cd1af
        with:
          version: https://github.com/docker/buildx.git#3ed2783f341a5abdef42bbadb8d1fefe7de7a447
      - name: Build
        uses: docker/build-push-action@175d02bffea74695e96b351069ac938b338802f9
        with:
          context: src
          tags: ${{ env.IMAGE_NAME }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/image.tar
          labels: ${{ needs.metadata.outputs.labels }}
      - name: Upload artifact
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb
        with:
          name: Image
          path: /tmp/image.tar

  snyk:
    needs: build
    name: Check Docker image for vulnerabilities with Snyk
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@0a5820a2ec510d2521c1715d24860fc8cd06400a
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.snyk.io:443
      - name: Download artifact
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7
        with:
          name: Image
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/image.tar
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@1cc9026f51d822442cb4b872d8d7ead8cc69a018
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ env.IMAGE_NAME }}:test

  push:
    if: github.event_name != 'pull_request'
    needs: [snyk, metadata]
    name: Push Docker image to the Container registry (GitHub Packages)
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@0a5820a2ec510d2521c1715d24860fc8cd06400a
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            ghcr.io:443
      - name: Download artifact
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7
        with:
          name: Image
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/image.tar
      - name: Log in to the Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag Docker image properly
        run: |
          while IFS= read -r tag; do
            echo "Tagging image $tag"
            docker tag ${{ env.IMAGE_NAME }}:test "$tag"
          done <<< "${{ needs.metadata.outputs.tags }}"
      - name: Push Docker image
        run: docker push -a ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} # TODO: change this hack when https://github.com/docker/build-push-action/issues/17 will be truly fixed