# TODO: move all of this into separate actions (warriors-life/test-code-action, warriors-life/test-image-action, warriors-life/build-image-action, warriors-life/push-image-action)
# TODO: cache actions/checkout's output
# TODO: use SARIF and github/codeql-action/upload-sarif when we'll move to GitHub Advanced Security

name: Build

on:
  push:
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    branches:
      - 'release'
      - 'dev'
  schedule:
    - cron: '30 1 * * 6' # Weekly on Saturdays

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  NODE_ENV: ${{ (github.ref == 'ref/heads/release' || github.base_ref == 'ref/heads/release') && 'release' || 'dev' }}

permissions: {}

jobs:
  hadolint:
    if: "!contains(github.repository, '.warriors-life-template')"
    name: Lint Dockerfile with Hadolint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
      - name: Checkout # TODO: too heavy for checking out only one file
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          persist-credentials: false
      - name: Lint
        uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf
        with:
          dockerfile: src/Dockerfile
          failure-threshold: style

  scorecard:
    if: "!contains(github.repository, '.warriors-life-template')"
    name: Check supply chain with Scorecard
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            api.osv.dev:443
            auth.docker.io:443
            bestpractices.coreinfrastructure.org:443
            github.com:443
            index.docker.io:443
      - name: Checkout code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          persist-credentials: false
      - name: Run analysis
        uses: ossf/scorecard-action@e38b1902ae4f44df626f11ba0734b14fb91f8f86
        with:
          results_file: results.sarif
          results_format: sarif
          repo_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload output
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: Scorecard output
          path: results.sarif

  metadata:
    if: "!contains(github.repository, '.warriors-life-template')"
    name: Get Docker image metadata
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=sha,prefix={{branch}}-
            type=schedule,pattern=weekly

  build:
    needs: metadata
    name: Build Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      test-tag: ${{ steps.set-outputs.outputs.test-tag }}
      run-snyk: ${{ steps.set-outputs.outputs.run-snyk }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            auth.docker.io:443
            dl-cdn.alpinelinux.org:443
            github.com:443
            production.cloudflare.docker.com:443
            registry-1.docker.io:443
            docker.io:443
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          persist-credentials: false
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c
        with:
          version: https://github.com/docker/buildx.git#ed00243a0ce2a0aee75311b06e32d33b44729689
      - name: Set outputs
        id: set-outputs
        run: |
          echo "test-tag=${{ env.IMAGE_NAME }}:test" >> $GITHUB_OUTPUT
          echo "run-snyk=${{ secrets.SNYK_TOKEN != '' }}" >> $GITHUB_OUTPUT
      - name: Build
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: src
          tags: ${{ steps.set-outputs.outputs.test-tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/image.tar
          labels: ${{ needs.metadata.outputs.labels }}
      - name: Upload Docker image
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: Docker image
          path: /tmp/image.tar

  snyk:
    if: needs.build.outputs.run-snyk == 'true'
    needs: build
    name: Check Docker image for vulnerabilities with Snyk
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.snyk.io:443
      - name: Download Docker image
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a
        with:
          name: Docker image
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/image.tar
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@7fad562681122205233d1242c3bb39598c5393da
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ needs.build.outputs.test-tag }}

  push:
    if: github.event_name != 'pull_request'
    needs: [hadolint, scorecard, snyk, metadata, build]
    name: Push Docker image to the Container registry (GitHub Packages)
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            ghcr.io:443
      - name: Download Docker image
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a
        with:
          name: Docker image
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/image.tar
      - name: Log in to the Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag Docker image properly
        run: |
          while IFS= read -r tag; do
            echo "Tagging image $tag"
            docker tag ${{ needs.build.outputs.test-tag }} "$tag"
          done <<< "${{ needs.metadata.outputs.tags }}"
      - name: Push Docker image
        run: docker push -a ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} # TODO: change this hack when https://github.com/docker/build-push-action/issues/17 will be truly fixed